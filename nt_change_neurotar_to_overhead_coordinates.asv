function [overhead_x,overhead_y] = nt_change_neurotar_to_overhead_coordinates(neurotar_x,neurotar_y,params)
%nt_change_neurotar_to_overhead_coordinates. Changes neurotar to overhead coordinates
%
% [OVERHEAD_X,OVERHEAD_Y] = nt_change_neurotar_to_overhead_coordinates(NEUROTAR_X,NEUROTAR_Y,PARAMS)
%
%   [neurotar_x, neurotar_y] (mm) are real world coordinates centered at
%       middle of neurotar setup, x is along bridge, y is orthogonal to
%       bridge, positive y is in front of the mouse
%
%   [camera_x, camera_y] (mm) are real world coordinates centered at camera
%   center, x is along image width, with the same increasing direction
%
%   [overhead_x, overhead_y] (pxl) are image coordinates x runs from 
%     (1:image_width) and y from (1:image_height) 
% 
% 2023-2024, Alexander Heimel

% % adjust scale
% x = -neurotar_x * params.overhead_camera_pixels_per_mm;
% y =  neurotar_y * params.overhead_camera_pixels_per_mm;

% rotate axis to correct for camera rotation relative to neurotar
ring = params.overhead_neurotar_headring - params.overhead_neurotar_center;
alpha = angle( ring(2) + 1i*ring(1));
rotation = [ cos(alpha) sin(alpha);-sin(alpha) cos(alpha)];
p = rotation * [x;y];

% invert overhead_center_position
cp = nt_undistort_overhead(params.overhead_neurotar_center(:),params);

% move center of neurotar to center position in camera coordinates
p = p + cp;

% distort by camera lense
p = nt_distort_overhead(p,params);
overhead_x = p(1,:);
overhead_y = p(2,:);
end