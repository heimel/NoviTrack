function [neurotar_x,neurotar_y] = nt_change_overhead_to_neurotar_coordinates(overhead_x,overhead_y,measures,params)
%nt_change_overhead_to_neurotar_coordinates. Changes overhead to neurotar coordinates
%
%   [neurotar_x,neurotar_y] = nt_change_overhead_to_neurotar_coordinates(overhead_x,overhead_y,measures,params)
%
%   [neurotar_x, neurotar_y] (mm) are real world coordinates centered at
%       middle of neurotar setup, x is along bridge, y is orthogonal to
%       bridge, positive y is in front of the mouse
%
%   [camera_x, camera_y] (mm) are real world coordinates centered at camera
%   center, x is along image width, with the same increasing direction
%
%   [overhead_x, overhead_y] (pxl) are image coordinates x runs from 
%     (1:image_width) and y from (1:image_height) 
% 
% 2023-2024, Alexander Heimel

[camera_x, camera_y] = nt_change_overhead_to_camera(overhead_x, overhead_y, params);


p = [overhead_x; overhead_y];
p = nt_undistort_overhead(p,params);
cp = nt_undistort_overhead(measures.overhead_neurotar_center(:),params);
p = p - cp;

ring = measures.overhead_neurotar_headring - measures.overhead_neurotar_center;
alpha = -angle( ring(2) + 1i*ring(1));
rotation = [ cos(alpha) sin(alpha);-sin(alpha) cos(alpha)];
p = rotation * p;

neurotar_x = -p(1,:) / params.overhead_camera_pixels_per_mm;
neurotar_y =  p(2,:) / params.overhead_camera_pixels_per_mm;

end