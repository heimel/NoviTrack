function [overhead_x,overhead_y,arena_x,arena_y] = nt_get_stim_position_from_measures(measures,stim_id,state,params)
%nt_get_stim_position_from_measures. Returns position of specific stim at specific time
%
%
% 2025, Alexander Heimel

overhead_x = NaN;
overhead_y = NaN;
arena_x = NaN;
arena_y = NaN;

ind_object = find(measures.object_positions(:,1)<=state.master_time & ...
    measures.object_positions(:,5)==stim_id,1,'last');

if isempty(ind_object) % could be a stimulus without position (yet)
    return
end

switch measures.object_positions(ind_object,4)
    case params.ARENA
        arena_x = measures.object_positions(ind_object,2);
        arena_y = measures.object_positions(ind_object,3);
        [overhead_x,overhead_y] = ...
            nt_change_arena_to_overhead_coordinates(...
            measures.object_positions(ind_object,2),...
            measures.object_positions(ind_object,3),...
            state.X,state.Y,state.alpha,...
            params);
    case params.NEUROTAR
        [arena_x,arena_y] = ...
            nt_change_neurotar_to_arena_coordinates(...
            measures.object_positions(ind_object,2),...
            measures.object_positions(ind_object,3),...
            state.X,state.Y,state.alpha,...
            params);
        [overhead_x,overhead_y] = ...
            nt_change_neurotar_to_overhead_coordinates(...
            measures.object_positions(ind_object,2),...
            measures.object_positions(ind_object,3),...
            params);
    case params.OVERHEAD
        [arena_x,arena_y] = ...
            nt_change_overhead_to_arena_coordinates(...
            measures.object_positions(ind_object,2),...
            measures.object_positions(ind_object,3),...
            state.X,state.Y,state.alpha,...
            params);
        overhead_x = measures.object_positions(ind_object,2);
        overhead_y = measures.object_positions(ind_object,3);
end % switch

